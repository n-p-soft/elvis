# Makefile.in
# (c) 2003, Steve Kirkendall
# (c) 2023, Nicolas Provost <dev@npsoft.fr>
# $Id: Makefile.in,v 2.121 2003/10/21 02:31:00 steve Exp $
#
# Makefile.in should not be modified!  The "configure" script reads Makefile.in
# and writes a customized Makefile by editing the values of the following
# macros.  If the "configure" script doesn't support your version of UNIX,
# I suggest you do a plain "configure unix" and then hand-edit the resulting
# Makefile.  That will also create a "config.h" file which may require some
# tweaking.

VERSION=2.3.0
DISTRIB=elvis-$(VERSION)

################################################################################
# This is the name of the compiler, along with any flags that should be used
# both for compiling and for linking.  Typical values are "cc -g" or "cc -O".
CC=cc -O -Isrc -fstack-protector-all

################################################################################
# This macro gives any arguments which will be needed during linking.
# Mostly, this means "-Llibdir" and "-llib" flags.  If you're compiling with
# X-windows support, then you'll have to add a "-lX11" and maybe a
# "-L/usr/X11/lib" flag or something similar.
LIBS=-ltermcap

################################################################################
# This should be "unix" for all UNIX variants.  It causes the compiler to use
# files from the osunix subdirectory, and do a UNIX-style installation.
OS=unix

################################################################################
# This is a command for compiling files in a subdirectory, and placing the
# resultant object files in the current directory.  Most UNIX compilers behave
# this way naturally, so you probably won't need to modify this.
OSCC=$(CC) -Isrc $(CFLAGS) $(FLAGC)

################################################################################
# This is the file name extension for object files.  For UNIX, this is almost
# always ".o"
OBJ=.o

################################################################################
# This is the file name extension for executable files.  For UNIX, this is
# always a null string because UNIX doesn't use file name extensions to mark
# executable files.
EXE=

################################################################################
# This is the shell command which is used for deleting a file if it exists.
# The "-f" causes "rm" to be silent if the file doesn't exist.
RM=rm -f

################################################################################
# This is the compiler flag which causes compilation but not linking.  For
# most UNIX compilers, this is "-c".
FLAGC=-c

################################################################################
# This is the compiler flag for adding a directory to the list of directories
# to be searched for #include files.  For most UNIX compilers, this is "-I".
FLAGI=-I

################################################################################
# This is a list of programs to be created by "make all".  The possible list
# includes elvis, ref, ctags, elvtags, and fmt.
# ctags and elvtags are the same program under different names.  The  on
# the end is just in case this Makefile is reconfigured for an operating
# system which requires the EXE macro to be something like ".exe".
ALLBIN=elvis ref elvtags elvfmt
ALL=out/elvis out/ref out/elvtags out/elvfmt

################################################################################
# The installation directories are relative to this
DESTDIR=
PREFIX=/usr/local

################################################################################
# This is the directory where "make install" will place the executable programs
BINDIR=$(PREFIX)/bin

################################################################################
# This is the directory where "make install" will place elvis' support files,
# such as the help text and the default initialization scripts.  If you change
# the value here, then you also need to change it in "config.h"
DATADIR=$(PREFIX)/share/elvis
DOCDIR= $(PREFIX)/share/elvis/doc
MANDIR=$(PREFIX)/share/man1

################################################################################
# Shell commands
CP=cp
MKDIR=mkdir -p

# Portable compilation rules
MISC=	COPYING Makefile.in configure \
	elvis.lsm src/e2 \
	elvis.spec.in Announce-$(VERSION)
OSSRCS=	src/osblock.c src/osdir.c \
	src/osprg.c src/ostext.c \
	src/osnet.c src/tcaphelp.c
OSOBJS=	src/osblock.o src/osdir.o src/osprg.o \
	src/ostext.o src/osnet.o
OSOBJS2=src/tcaphelp.o
OSHDRS=	src/osdef.h
GUISRCS=src/guicurs.c src/guiopen.c src/guitcap.c
GUIOBJS=src/guicurs.o src/guiopen.o src/guitcap.o

LPSRCS=	src/lpescape.c src/lpovrtyp.c src/lpps.c
LPOBJS=	src/lpescape.o src/lpovrtyp.o src/lpps.o
HDRS=	$(OSHDRS) $(GUIHDRS) src/autocmd.h src/buffer.h src/buffer2.h \
	src/calc.h src/color.h\
	src/cut.h src/descr.h src/digraph.h src/display.h src/display2.h \
	src/draw.h src/draw2.h src/elvis.h \
	src/elvisio.h src/event.h src/ex.h src/gui.h src/gui2.h \
	src/input.h src/lowbuf.h src/lp.h src/map.h \
	src/mark.h src/message.h src/message2.h src/misc.h \
	src/more.h src/move.h src/need.h src/operator.h \
	src/opsys.h src/optglob.h src/options.h src/regexp.h \
	src/region.h src/safe.h src/scan.h src/session.h \
	src/spell.h src/state.h src/state2.h src/tag.h src/tagsrch.h \
	src/tagelvis.h src/version.h src/vi.h \
	src/vicmd.h src/window.h src/config.h
SRCS=	$(OSSRCS) $(GUISRCS) $(LPSRCS) src/autocmd.c src/buffer.c \
	src/calc.c src/color.c src/cut.c \
	src/descr.c src/digraph.c src/display.c src/dmhex.c \
	src/dmmarkup.c src/dmnormal.c src/dmsyntax.c \
	src/draw.c src/event.c src/ex.c src/exaction.c src/exconfig.c \
	src/exedit.c src/exmake.c src/exsubst.c \
	src/fold.c src/ftp.c src/gui.c src/http.c src/input.c \
	src/io.c src/lowbuf.c src/lp.c src/main.c src/map.c \
	src/mark.c src/message.c src/misc.c src/more.c src/move.c \
	src/need.c src/operator.c src/optglob.c \
	src/options.c src/regexp.c src/region.c src/regsub.c src/safe.c \
	src/scan.c src/search.c src/session.c \
	src/spell.c src/state.c src/tag.c src/tagsrch.c src/tagelvis.c \
	src/url.c src/vi.c src/vicmd.c src/window.c
OBJ1=	$(OSOBJS) src/optglob.o src/options.o src/safe.o src/session.o
OBJ2=	src/buffer.o src/calc.o src/color.o src/descr.o src/digraph.o \
	src/display.o src/gui.o src/lowbuf.o src/mark.o src/misc.o src/io.o \
	src/dmhex.o src/dmmarkup.o src/dmnormal.o src/dmsyntax.o src/scan.o
OBJ3=	$(OSOBJS2) src/autocmd.o src/cut.o src/draw.o src/event.o src/ex.o \
	src/exaction.o src/exconfig.o src/exedit.o src/exmake.o src/exsubst.o \
	src/fold.o src/ftp.o src/http.o src/input.o src/lp.o src/map.o \
	src/message.o src/move.o src/more.o src/need.o src/operator.o \
	src/regexp.o src/region.o src/regsub.o src/search.o src/spell.o \
	src/state.o src/tinytcap.o src/tag.o src/tagsrch.o src/tagelvis.o \
	src/url.o src/vi.o src/vicmd.o src/window.o
OBJS=	$(OBJ1) $(OBJ2) $(OBJ3)
REFOBJS= src/ref.o src/tag.o src/tagsrch.o src/safe.o
CTOBJS=	src/ctags.o src/tag.o src/safe.o
CFLAGS=	$(FLAGI)src/
SHELL=	/bin/sh

all: $(ALL)

out/elvis: $(HDRS) src/main.o $(OBJS) $(GUIOBJS) $(LPOBJS)
	$(CC) $(CFLAGS) src/main.o $(OBJS) $(GUIOBJS) \
		$(LPOBJS) $(LIBS) -o out/elvis

out/ctags: $(CTOBJS)
	$(CC) $(CFLAGS) $(CTOBJS) -o out/ctags

doc/elvtags.man: doc/ctags.man
	sed 's/\<CTAGS\>/ELVTAGS/g; s/ctags\>/elvtags/g; s/ant" elvtags/ant" ctags/' doc/ctags.man >doc/elvtags.man

out/elvtags: out/ctags
	$(CP) out/ctags out/elvtags

out/elvfmt doc/elvfmt.man: out/fmt doc/fmt.man
	$(CP) out/fmt out/elvfmt
	sed 's/\<FMT\>/ELVFMT/g; s/\<fmt\>/elvfmt/g' doc/fmt.man >doc/elvfmt.man

out/ref: $(REFOBJS)
	$(CC) $(CFLAGS) $(REFOBJS) -o out/ref

out/fmt: src/fmt.c src/osdir.c
	$(CC) $(CFLAGS) src/fmt.c -o out/fmt

out/verify: $(HDRS) src/verify.o $(OBJ1) $(OBJ2)
	$(CC) $(CFLAGS) src/verify.o $(OBJ1) $(OBJ2) -o out/verify

out/elvdump: $(HDRS) src/elvdump.o $(OBJ1)
	$(CC) $(CFLAGS) src/elvdump.o $(OBJ1) -o out/elvdump

out/calc: $(HDRS) src/calc.c
	$(CC) $(CFLAGS) -DTRY src/calc.c -o out/calc


###############################################################################
# Handy commands

clean:
	$(RM) src/*.o out/*
	$(RM) elvis*.tar.gz
	$(RM) doc/elvtags.man

wc: $(SRCS) $(HDRS)
	wc $(SRCS) $(HDRS) | sort -n

tags: $(SRCS) $(HDRS)
	out/elvtags $(SRCS) $(HDRS)

tarball:
	rm -f $(DISTRIB).tar.gz
	make $(DISTRIB).tar.gz

$(DISTRIB).tar.gz:
	rm -rf $(DISTRIB)
	$(MKDIR) $(DISTRIB)
	for i in src/os*; do if [ -d $$i ]; then $(MKDIR) $(DISTRIB)/$$i; fi; done
	for i in src/gui*; do if [ -d $$i ]; then $(MKDIR) $(DISTRIB)/$$i; fi; done
	cp src/*.c src/*.h $(MISC) $(DISTRIB)/src
	rm -f $(DISTRIB)/src/sample.c
	$(MKDIR) $(DISTRIB)/data
	cp data/*.* $(DISTRIB)/data/
	for i in icons scripts stubs themes; do $(MKDIR) $(DISTRIB)/data/$$i; cp data/$$i/* $(DISTRIB)/data/$$i/; done
	$(MKDIR) $(DISTRIB)/doc
	cp doc/*.* $(DISTRIB)/doc
	chmod +w $(DISTRIB)/doc/*
	for i in doc/*.html; do sed 's/<title>Elvis[^ ]*/<title>Elvis-$(VERSION)/;s/ELVIS[^ <]*</ELVIS-$(VERSION)</' $$i >$(DISTRIB)/$$i; done
	for i in doc/*.man; do sed 's/Elvis 2\.[0-9x][0-9a-z-]*/Elvis $(VERSION)/' $$i >$(DISTRIB)/$$i; done
	for i in os*/*.c os*/*.h os*/*.mak os*/*.lib os*/*.ICO; do cp $$i $(DISTRIB)/$$i; done
	for i in gui*/*; do if [ -f $$i ]; then cp $$i $(DISTRIB)/$$i; fi; done
	rm -f $(DISTRIB)/src/osunix/osconfig.h
	rm -f $(DISTRIB)/src/config.h
	rm -f $(DISTRIB)/Makefile
	rm -f $(DISTRIB)/doc/elvtags.man
	rm -f $(DISTRIB)/doc/elvfmt.man
	find $(DISTRIB) -type f -exec chmod +w {} \;
	tar czf $(DISTRIB).tar.gz $(DISTRIB)
	rm -rf $(DISTRIB)


docelvistrs.msg: $(SRCS)
	sed -n '/%[cds]/d; s/\[[a-zA-Z]*\]//; s/\\\\/\\/g; s/.*msg(MSG_[A-Z]*, "\([^ 	"][^"]*\)".*/\1/p' *.c os**.c gui**.c | sort -u >docelvistrs.msg

###############################################################################

install: $(ALL) doc/elvtags.man
	rm -f doc/*.bak
	[ -d $(DESTDIR)/$(BINDIR) ] || $(MKDIR) $(DESTDIR)/$(BINDIR)
	cp -a $(ALL) $(DESTDIR)/$(BINDIR)
	rm -rf $(DESTDIR)/$(DATADIR)
	$(MKDIR) -p $(DESTDIR)/$(DATADIR)
	cp data/*.* $(DESTDIR)/$(DATADIR)
	for i in icons scripts stubs themes; do $(MKDIR) $(DESTDIR)/$(DATADIR)/$$i; cp data/$$i/* $(DESTDIR)/$(DATADIR)/$$i/; done
	rm -rf $(DESTDIR)/$(DOCDIR)
	$(MKDIR) -p $(DESTDIR)/$(DOCDIR)
	$(MKDIR) -p $(DESTDIR)/$(MANDIR)
	cp doc/*.html $(DESTDIR)/$(DOCDIR)
	cp doc/*.txt $(DESTDIR)/$(DOCDIR)
	cp doc/elvistrs.msg $(DESTDIR)/$(DOCDIR)
	cp doc/printdoc.bat $(DESTDIR)/$(DOCDIR)
	find $(DESTDIR)/$(DATADIR) -type f -exec chmod 0644 {} \;
	find $(DESTDIR)/$(DOCDIR) -type f -exec chmod 0644 {} \;
	(cd doc; for i in *.html; do sed 's/<title>Elvis[^ ]*/<title>Elvis-$(VERSION)/;s/ELVIS[^ <]*</ELVIS-$(VERSION)</' $$i > $(DESTDIR)/$(DOCDIR)/$$i; done)
	-(cd $(DESTDIR)/$(DATADIR); $(DESTDIR)/$(BINDIR)/elvtags -gitv stubs/*.c || ctags stubs/*.c)
	chmod 0755 $(DESTDIR)/$(DATADIR)/*/. $(DESTDIR)/$(DATADIR) $(DESTDIR)/$(DOCDIR)
	for F in elvis elvfmt; do \
		cp doc/$$F.man $(DESTDIR)/$(MANDIR)/$$F.1; \
		gzip -f $(DESTDIR)/$(MANDIR)/$$F.1; done
	-[ -d $(DESTDIR)/etc/elvis ] || $(MKDIR) $(DESTDIR)/etc/elvis
	-chmod 0755 $(DESTDIR)/etc/elvis/
	-@ : >$(DESTDIR)/etc/elvis/README && ( \
	  echo "This directory contains system-dependent versions of elvis' configuration" \
	  echo "files.  The standard versions are available in $(DATADIR)"  \
	  echo "To customize any of these configuration files for this system,"  \
	  echo "first copy the standard version of the file into /etc/elvis and" \
	  echo "then edit the copy.  Leave the standard version unchanged." \
	) >>$(DESTDIR)//etc/elvis/README
	-chmod 0644 $(DESTDIR)/etc/elvis/README
	@echo "This directory contains the standard versions of elvis' configuration" >$(DESTDIR)/$(DATADIR)/README
	@echo "files.  DO NOT MODIFY THESE FILES!  To perform host-specific customization," >>$(DESTDIR)/$(DATADIR)/README
	@echo "copy files from this directory into /etc/elvis/, and then modify the copies." >>$(DESTDIR)/$(DATADIR)/README
	@echo "To make user-specific changes, create a ~/.elvis/ directory (if it doesn't" >>$(DESTDIR)/$(DATADIR)/README
	@echo "exist already) and copy files from this directory into ~/.elvis/ and then" >>$(DESTDIR)/$(DATADIR)/README
	@echo "modify the copies.  Any file that elvis finds in ~/.elvis/ or /etc/elvis/" >>$(DESTDIR)/$(DATADIR)/README
	@echo "overrides the similarly named file in this directory." >>$(DESTDIR)/$(DATADIR)/README
	chmod 0644 $(DESTDIR)/$(DATADIR)/README


###############################################################################

uninstall:
	(cd $(BINDIR); $(RM) $(ALL))
	rm -rf $(DATADIR)
	rm -rf $(DOCDIR)
	rm -f $(MANDIR)/{elvis.1.gz,elvfmt.1.gz}

